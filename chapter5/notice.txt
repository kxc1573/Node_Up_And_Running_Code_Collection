1.DNS模块主要包含了resolve和reverse两个方法，前者把域名转换成DNS记录，后者将IP地址转换成域名。
2.加密模块完成的工作：1）它使Node能够使用SSL/TLS；2）它包含了哈希算法，如MD5或SHA-1；3）它允许使用HMAC，并提供了若干加密方法来确保数据安全；4）HMAC包含了公钥加密功能来对数据进行签名及验证。
3.加密模块crypto包括Hash、Hmac、Cipher加密、Decipher解密、Sign签名、Verify验证签名
4.Node本身是一个“胖”线程，带有单独一个事件循环，但你可以任意地开启其他进程(线程)在事件循环外工作。
5.可以使用process模块从当前的Node进程中获取信息，并可以修改配置；process模块是全局的，可以一直通过变量process获得；process是EventEmitter的实例，因而它提供了基于对Node进程的系统调用的事件。
6.同一个事件的所有监听器是在同一个代码路径上，由运行执行器按数组顺序顺序调用，所以一个回调函数异常，会导致改事件的其他回调函数终止执行；但是一个事件的异常并不会影响其他事件的执行。
7.process.stdin是可读的数据流、process.stdout和process.stderr是可写的数据流；作为接口，对应系统的进程默认输入流stdin、进程输出流stdout和进程错误输出流stderr。process.argv是命令行参数数组，'node'为第一个参数。
8.process.nextTick()创建了一个回调函数，它会在下一个tick或者事件循环下一次迭代时被调用。nextTick()回调函数不是一个单独事件，所以也不像一般回调函数那样异常脆弱。因为nextTick()是在事件循环的遍历开始前就被调用了，而其他事件在时间循环内部按顺序执行，内部异常并不会影响nextTick()的执行。
9.创建子进程可以更好地利用CPU的多核。child_process有两个主要的方法：spawn()会创建一个子进程，并且有独立的stdin、stdout、stderr文件描述符。exec()会创建子进程，并会在进程结束的时候以回调函数的方式返回结果。创建子进程的方法又很多种，其中一种是非阻塞式的。spawn()更多用来在服务器开发中创建服务器程序的子模块，是利用多核CPU的最常见方式。
10.Node创建的网站利用多核CPU进行并发处理的三种方案：
 1）把Node程序启动到不同的端口上，然后利用Nginx或Apache来进行负载均衡。（不优雅，且使用第三方软件）
 2）让Node进程启动许多子进程，然后把请求任务分发给他们。（存在单点故障，只有一个Node进程来分发任务）
 3）在第二个方案的基础上，创建子进程时通过custom FD将主进程创建封装的socket传给子进程，达到内核负责分发处理的目的，主Node进程不在会有阻塞的风险。