1. Socket.IO是一个小巧的扩展库，功能很像Node核心库net。可以通过Socket.IO在浏览器客户端与Node服务器之间采用高效的低层socket机制来回发送消息（保持长连接）；该模块还可以再浏览器与服务器间共享代码（使用同一套API）。
2. Socket.IO的名字来源于它使用了浏览器至此并采用的HTML5 WebSocket标准。

3. 使用命名空间可以避免代码嵌入时引发的冲突

4. 使用Socket.IO一般是作为Node中的独立程序或者一个包含Node之外模块的大型网站的一部分，比如同时使用Express和Socket.IO，将会在使用统一语言（JavaScript）编写代码方面获得巨大便利。
5. 通过把Socket.IO加入Express，可以获得许多额外的功能，但通信价值有限，除非从用户浏览器发起的连接能够以socket流的方式使用。任何修改（登出、修改设置等操作）应该字啊socket操作中反馈出来，反之亦然。欲实现此功能，要使用session。
6. 使用Connect中间件框架可以简化公共操作，比如session管理、cookies操作、用户认证、缓存、性能指标等。
7. （？）如果支持用户再浏览器中从不同的标签页面同时访问你的网站。那么同一个session就会创建不同的连接，那么如何处理已连接的sokcet的更新呢？Socket.IO提供了房间（room）和频道（channel），可以根据喜好使用它们。